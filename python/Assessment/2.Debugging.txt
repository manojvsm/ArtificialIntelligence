for i in range(5):
print(i)

Ans:
for i in range(5):
    print(i)

numbers = [1, 2, 3, 4, 5,)

Ans:
numbers = [1, 2, 3, 4, 5]

#3.What error will occur in this code if the file does not exist?

file = open("data.txt", "r")
print(file.read())
file.close()


Ans:
File not found

#4.What is wrong with this code?
numbers = [10, 20, 30, 40]
index = "2"
print(numbers[index])

Ans:
numbers = [10, 20, 30, 40]
index = 2
print(numbers[index])


#5.What is the issue with this function?

def is_prime(n):
    for i in range(2, n):
        if n % i == 0:
            return True
    return False

Ans:
def is_prime(n):
    for i in range(2, n):
        if n % i == 0:
            return False
    return True



#6.What is the issue with this function?

def filter_even(numbers):
    return [num for num in numbers if num % 2 == 1]

Ans:
def filter_even(numbers):
    return [num for num in numbers if num % 2 == 0]

#7.Question:
What will happen when you run this code?

numbers = [3, 1, 4, 1, 5, 9]
sorted_numbers = numbers.sort()
print(sorted_numbers)

Ans:
[1, 1, 3, 4, 5, 9]

#8.What is the issue with this function?

def sum_numbers(numbers):
    total = 1
    for num in numbers:
        total += num
    return total

Ans:

def sum_numbers(numbers):
    total = 0
    for num in numbers:
        total += num
    return total

#9.What is the issue with this recursive function?

def factorial(n):
    return n * factorial(n-1)

Ans:
def factorial(n):
    if n==0 or n==1:
        return 1
    else:
        return n * factorial(n-1)
        
print (factorial(5))


#10.What will happen when you run this code?

data = {"name": "Alice", "age": 25}
data["city"] += "New York"

Ans:
Error














